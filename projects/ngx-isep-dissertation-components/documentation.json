{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "ArrowRightIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: Icon.ARROW_RIGHT,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
            },
            {
                "name": "ChevronLeftIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: Icon.CHEVRON_LEFT,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
            },
            {
                "name": "ChevronRightIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: Icon.CHEVRON_RIGHT,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
            },
            {
                "name": "CloseIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: Icon.CLOSE,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
            },
            {
                "name": "CustomSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    width: 300,\r\n    height: 40,\r\n    placeholder: \"Custom size input\",\r\n    errorLabel: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputContainer = canvas.getByRole(\"textbox\").parentElement;\r\n    expect(inputContainer).toHaveStyle(`width: 300px`);\r\n    expect(inputContainer).toHaveStyle(`height: 40px`);\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: ButtonColor.BLACK,\r\n    size: ButtonSize.MEDIUM,\r\n    label: 'Button',\r\n    disabled: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const button = canvas.getByRole('button', { name: 'Button' });\r\n\r\n    await userEvent.click(button);\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        checked: false,\r\n        label: '',\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n        const checkbox = canvas.getByRole('checkbox');\r\n        await userEvent.click(checkbox);\r\n        expect(checkbox).toBeChecked();\r\n      },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    width: 245,\r\n    height: 32,\r\n    placeholder: \"Enter text\",\r\n    errorLabel: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputElement = canvas.getByRole(\"textbox\");\r\n\r\n    // Interaction test example: input value and check if it's reflected\r\n    fireEvent.input(inputElement, { target: { value: \"Test input\" } });\r\n    expect(inputElement).toHaveValue(\"Test input\");\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    title: \"Select Options\",\r\n    options: exampleOptions,\r\n    errorLabel: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    expect(canvas.getByText(\"Select Options\")).toBeVisible();\r\n    fireEvent.click(canvas.getByText(\"Select Options\"));\r\n\r\n    for (const option of exampleOptions) {\r\n      const optionElement = canvas.getByText(option.name);\r\n      expect(optionElement).toBeVisible();\r\n      expect(\r\n        optionElement.parentElement?.querySelector('input[type=\"checkbox\"]')\r\n      ).not.toBeChecked();\r\n    }\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        imageSrc: \"https://via.placeholder.com/312x400\",\r\n        hasTag: false,\r\n        tagColor: \"#1E2832\",\r\n        tagText: \"SALE\",\r\n        productCategory: \"Category\",\r\n        productName: \"Product Name\",\r\n        finalPrice: 100.00,\r\n        priceWithoutPromo: undefined,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      const img = canvas.getByRole('img');\r\n      expect(img).toBeInTheDocument();\r\n  \r\n      const category = canvas.getByText('Category');\r\n      expect(category).toBeInTheDocument();\r\n  \r\n      const name = canvas.getByText('Product Name');\r\n      expect(name).toBeInTheDocument();\r\n  \r\n      const price = canvas.getByText('$100.00');\r\n      expect(price).toBeInTheDocument();\r\n    }\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        options: exampleOptions,\r\n        label: 'Select an Option',\r\n        errorLabel: false,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      // Click the select to open dropdown\r\n      const selectElement = canvas.getByText('Select an Option');\r\n      await fireEvent.focus(selectElement);\r\n  \r\n      // Check if the options are present\r\n      const option1 = canvas.getByText('Option 1');\r\n      const option2 = canvas.getByText('Option 2');\r\n      const option3 = canvas.getByText('Option 3');\r\n  \r\n      expect(option1).toBeInTheDocument();\r\n      expect(option2).toBeInTheDocument();\r\n      expect(option3).toBeInTheDocument();\r\n    }\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <isep-lib-tabs>\r\n        <isep-lib-tab title=\"Tab 1\">Content for Tab 1</isep-lib-tab>\r\n        <isep-lib-tab title=\"Tab 2\" [isActive]=\"true\">Content for Tab 2</isep-lib-tab>\r\n        <isep-lib-tab title=\"Tab 3\">Content for Tab 3</isep-lib-tab>\r\n      </isep-lib-tabs>\r\n    `,\r\n  }),\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    // Check if all tabs are present\r\n    const tab1 = canvas.getByText('Tab 1' );\r\n    const tab2 = canvas.getByText('Tab 2' );\r\n    const tab3 = canvas.getByText('Tab 3' );\r\n\r\n    expect(tab1).toBeInTheDocument();\r\n    expect(tab2).toBeInTheDocument();\r\n    expect(tab3).toBeInTheDocument();\r\n    \r\n    // Check if the content for the active tab is displayed\r\n    await fireEvent.click(tab2);\r\n    const activeContent = canvas.getByText('Content for Tab 2');\r\n    expect(activeContent).toBeInTheDocument();\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: ButtonColor.WHITE,\r\n    size: ButtonSize.SMALL,\r\n    label: 'Button',\r\n    disabled: true,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const button = canvas.getByRole('button', { name: 'Button' });\r\n    expect(button).toHaveAttribute('aria-disabled', 'true');\r\n  },\r\n}"
            },
            {
                "name": "exampleCheckedOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MultiSelectModel[]",
                "defaultValue": "[\r\n  { id: 1, name: \"Option 1\", isSelected: true },\r\n  { id: 2, name: \"Option 2\", isSelected: false },\r\n  { id: 3, name: \"Option 3\", isSelected: true },\r\n]"
            },
            {
                "name": "exampleOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MultiSelectModel[]",
                "defaultValue": "[\r\n  { id: 1, name: \"Option 1\", isSelected: false },\r\n  { id: 2, name: \"Option 2\", isSelected: false },\r\n  { id: 3, name: \"Option 3\", isSelected: false },\r\n]"
            },
            {
                "name": "exampleOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectModel[]",
                "defaultValue": "[\r\n    { id: 1, name: 'Option 1' },\r\n    { id: 2, name: 'Option 2' },\r\n    { id: 3, name: 'Option 3' },\r\n]"
            },
            {
                "name": "FilterIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: Icon.FILTER,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
            },
            {
                "name": "HeartIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: Icon.HEART,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
            },
            {
                "name": "PreSelectedOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    title: \"Select Options\",\r\n    options: exampleCheckedOptions,\r\n    errorLabel: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    expect(canvas.getByText(\"Select Options\")).toBeVisible();\r\n    fireEvent.click(canvas.getByText(\"Select Options\"));\r\n\r\n    for (const option of exampleCheckedOptions) {\r\n      const optionElement = canvas.getByText(option.name);\r\n      expect(optionElement).toBeVisible();\r\n      if (option.isSelected) {\r\n        expect(\r\n          optionElement.parentElement?.querySelector('input[type=\"checkbox\"]')\r\n        ).toBeChecked();\r\n      } else {\r\n        expect(\r\n          optionElement.parentElement?.querySelector('input[type=\"checkbox\"]')\r\n        ).not.toBeChecked();\r\n      }\r\n    }\r\n  },\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    previewTabs: {\r\n      'storybook/docs/panel': {\r\n        hidden: false\r\n      }\r\n    },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "ShoppingBagIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: Icon.SHOPPING_BAG,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
            },
            {
                "name": "WithCustomLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        checked: false,\r\n        label: 'Custom Label',\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n      const checkbox = canvas.getByRole('checkbox');\r\n      const label = canvas.getByText('Custom Label');\r\n      await userEvent.click(checkbox);\r\n      expect(checkbox).toBeChecked();\r\n      expect(label).toBeInTheDocument();\r\n    },\r\n}"
            },
            {
                "name": "WithDisabledTab",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <isep-lib-tabs>\r\n        <isep-lib-tab title=\"Tab 1\">Content for Tab 1</isep-lib-tab>\r\n        <isep-lib-tab title=\"Tab 2\">Content for Tab 2</isep-lib-tab>\r\n        <isep-lib-tab title=\"Tab 3\" [disabled]=\"true\" [isActive]=\"true\">Content for Tab 3</isep-lib-tab>\r\n      </isep-lib-tabs>\r\n    `,\r\n  }),\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    // Check if all tabs are present\r\n    const tab1 = canvas.getByText('Tab 1' );\r\n    const tab2 = canvas.getByText('Tab 2' );\r\n    const tab3 = canvas.getByText('Tab 3' );\r\n\r\n    expect(tab1).toBeInTheDocument();\r\n    expect(tab2).toBeInTheDocument();\r\n    expect(tab3).toBeInTheDocument();\r\n\r\n    // Check if the third tab is disabled\r\n    expect(tab3).toHaveClass('disabled');\r\n\r\n    // Check if the content for the active tab is displayed\r\n    const activeContent = canvas.getByText('Content for Tab 1');\r\n    expect(activeContent).toBeInTheDocument();\r\n  },\r\n}"
            },
            {
                "name": "WithErrorLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    width: 245,\r\n    height: 32,\r\n    placeholder: \"Enter text\",\r\n    errorLabel: true,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputElement = canvas.getByRole(\"textbox\");\r\n\r\n    expect(inputElement).toHaveClass(\"error\");\r\n  },\r\n}"
            },
            {
                "name": "WithErrorLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    title: \"Error label text\",\r\n    options: exampleOptions,\r\n    errorLabel: true,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const errorLabelElement = canvas.getByText(\"Error label text\");\r\n    expect(errorLabelElement).toBeVisible();\r\n    const errorSelect = canvas.getByRole(\"select\");\r\n    expect(errorSelect).toHaveClass(\"multi-select error\");\r\n  },\r\n}"
            },
            {
                "name": "WithErrorLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        options: exampleOptions,\r\n        label: 'Select an Option',\r\n        errorLabel: true,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      // Click the select to open dropdown\r\n      const selectElement = canvas.getByRole('select');\r\n      await fireEvent.focus(selectElement);\r\n  \r\n      // Check if the options are present\r\n      const option1 = canvas.getByText('Option 1');\r\n      const option2 = canvas.getByText('Option 2');\r\n      const option3 = canvas.getByText('Option 3');\r\n  \r\n      expect(option1).toBeInTheDocument();\r\n      expect(option2).toBeInTheDocument();\r\n      expect(option3).toBeInTheDocument();\r\n  \r\n      // Check if error class is present\r\n      expect(selectElement).toHaveClass('error');\r\n    }\r\n}"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: ButtonColor.CORAL,\r\n    size: ButtonSize.LARGE,\r\n    label: 'Button',\r\n    icon: ButtonIcon.HEART,\r\n    disabled: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const button = canvas.getByRole('button', { name: 'icon Button' });\r\n    const icon = button.getElementsByClassName('button-icon').item(0);\r\n    expect(icon).toBeInTheDocument();\r\n  },\r\n}"
            },
            {
                "name": "WithPromoPrice",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        imageSrc: \"https://via.placeholder.com/312x400\",\r\n        hasTag: true,\r\n        tagColor: \"#1E2832\",\r\n        tagText: \"SALE\",\r\n        productCategory: \"Category\",\r\n        productName: \"Product Name\",\r\n        finalPrice: 80.00,\r\n        priceWithoutPromo: 100.00,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      const finalPrice = canvas.getByText('$80.00');\r\n      expect(finalPrice).toBeInTheDocument();\r\n  \r\n      const priceWithoutPromo = canvas.getByText('$100.00');\r\n      expect(priceWithoutPromo).toBeInTheDocument();\r\n    }\r\n}"
            },
            {
                "name": "WithTag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        imageSrc: \"https://via.placeholder.com/312x400\",\r\n        hasTag: true,\r\n        tagColor: \"#FF0000\",\r\n        tagText: \"NEW\",\r\n        productCategory: \"Category\",\r\n        productName: \"Product Name\",\r\n        finalPrice: 100.00,\r\n        priceWithoutPromo: undefined,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      const tag = canvas.getByText('NEW');\r\n      expect(tag).toBeInTheDocument();\r\n    }\r\n}"
            }
        ],
        "functions": [
            {
                "name": "validateIconPresence",
                "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "canvasElement",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "canvasElement",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconComponent>",
                "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MultiSelectComponent>",
                "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductTileComponent>",
                "file": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabsComponent>",
                "file": "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts": [
                {
                    "name": "ArrowRightIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: Icon.ARROW_RIGHT,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
                },
                {
                    "name": "ChevronLeftIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: Icon.CHEVRON_LEFT,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
                },
                {
                    "name": "ChevronRightIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: Icon.CHEVRON_RIGHT,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
                },
                {
                    "name": "CloseIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: Icon.CLOSE,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
                },
                {
                    "name": "FilterIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: Icon.FILTER,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
                },
                {
                    "name": "HeartIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: Icon.HEART,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
                },
                {
                    "name": "ShoppingBagIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: Icon.SHOPPING_BAG,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    validateIconPresence(canvasElement);\r\n  },\r\n}"
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts": [
                {
                    "name": "CustomSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    width: 300,\r\n    height: 40,\r\n    placeholder: \"Custom size input\",\r\n    errorLabel: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputContainer = canvas.getByRole(\"textbox\").parentElement;\r\n    expect(inputContainer).toHaveStyle(`width: 300px`);\r\n    expect(inputContainer).toHaveStyle(`height: 40px`);\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    width: 245,\r\n    height: 32,\r\n    placeholder: \"Enter text\",\r\n    errorLabel: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputElement = canvas.getByRole(\"textbox\");\r\n\r\n    // Interaction test example: input value and check if it's reflected\r\n    fireEvent.input(inputElement, { target: { value: \"Test input\" } });\r\n    expect(inputElement).toHaveValue(\"Test input\");\r\n  },\r\n}"
                },
                {
                    "name": "WithErrorLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    width: 245,\r\n    height: 32,\r\n    placeholder: \"Enter text\",\r\n    errorLabel: true,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const inputElement = canvas.getByRole(\"textbox\");\r\n\r\n    expect(inputElement).toHaveClass(\"error\");\r\n  },\r\n}"
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: ButtonColor.BLACK,\r\n    size: ButtonSize.MEDIUM,\r\n    label: 'Button',\r\n    disabled: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const button = canvas.getByRole('button', { name: 'Button' });\r\n\r\n    await userEvent.click(button);\r\n  },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: ButtonColor.WHITE,\r\n    size: ButtonSize.SMALL,\r\n    label: 'Button',\r\n    disabled: true,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const button = canvas.getByRole('button', { name: 'Button' });\r\n    expect(button).toHaveAttribute('aria-disabled', 'true');\r\n  },\r\n}"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: ButtonColor.CORAL,\r\n    size: ButtonSize.LARGE,\r\n    label: 'Button',\r\n    icon: ButtonIcon.HEART,\r\n    disabled: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const button = canvas.getByRole('button', { name: 'icon Button' });\r\n    const icon = button.getElementsByClassName('button-icon').item(0);\r\n    expect(icon).toBeInTheDocument();\r\n  },\r\n}"
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        checked: false,\r\n        label: '',\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n        const canvas = within(canvasElement);\r\n        const checkbox = canvas.getByRole('checkbox');\r\n        await userEvent.click(checkbox);\r\n        expect(checkbox).toBeChecked();\r\n      },\r\n}"
                },
                {
                    "name": "WithCustomLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        checked: false,\r\n        label: 'Custom Label',\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n      const checkbox = canvas.getByRole('checkbox');\r\n      const label = canvas.getByText('Custom Label');\r\n      await userEvent.click(checkbox);\r\n      expect(checkbox).toBeChecked();\r\n      expect(label).toBeInTheDocument();\r\n    },\r\n}"
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    title: \"Select Options\",\r\n    options: exampleOptions,\r\n    errorLabel: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    expect(canvas.getByText(\"Select Options\")).toBeVisible();\r\n    fireEvent.click(canvas.getByText(\"Select Options\"));\r\n\r\n    for (const option of exampleOptions) {\r\n      const optionElement = canvas.getByText(option.name);\r\n      expect(optionElement).toBeVisible();\r\n      expect(\r\n        optionElement.parentElement?.querySelector('input[type=\"checkbox\"]')\r\n      ).not.toBeChecked();\r\n    }\r\n  },\r\n}"
                },
                {
                    "name": "exampleCheckedOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MultiSelectModel[]",
                    "defaultValue": "[\r\n  { id: 1, name: \"Option 1\", isSelected: true },\r\n  { id: 2, name: \"Option 2\", isSelected: false },\r\n  { id: 3, name: \"Option 3\", isSelected: true },\r\n]"
                },
                {
                    "name": "exampleOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MultiSelectModel[]",
                    "defaultValue": "[\r\n  { id: 1, name: \"Option 1\", isSelected: false },\r\n  { id: 2, name: \"Option 2\", isSelected: false },\r\n  { id: 3, name: \"Option 3\", isSelected: false },\r\n]"
                },
                {
                    "name": "PreSelectedOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    title: \"Select Options\",\r\n    options: exampleCheckedOptions,\r\n    errorLabel: false,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    expect(canvas.getByText(\"Select Options\")).toBeVisible();\r\n    fireEvent.click(canvas.getByText(\"Select Options\"));\r\n\r\n    for (const option of exampleCheckedOptions) {\r\n      const optionElement = canvas.getByText(option.name);\r\n      expect(optionElement).toBeVisible();\r\n      if (option.isSelected) {\r\n        expect(\r\n          optionElement.parentElement?.querySelector('input[type=\"checkbox\"]')\r\n        ).toBeChecked();\r\n      } else {\r\n        expect(\r\n          optionElement.parentElement?.querySelector('input[type=\"checkbox\"]')\r\n        ).not.toBeChecked();\r\n      }\r\n    }\r\n  },\r\n}"
                },
                {
                    "name": "WithErrorLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    title: \"Error label text\",\r\n    options: exampleOptions,\r\n    errorLabel: true,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const errorLabelElement = canvas.getByText(\"Error label text\");\r\n    expect(errorLabelElement).toBeVisible();\r\n    const errorSelect = canvas.getByRole(\"select\");\r\n    expect(errorSelect).toHaveClass(\"multi-select error\");\r\n  },\r\n}"
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        imageSrc: \"https://via.placeholder.com/312x400\",\r\n        hasTag: false,\r\n        tagColor: \"#1E2832\",\r\n        tagText: \"SALE\",\r\n        productCategory: \"Category\",\r\n        productName: \"Product Name\",\r\n        finalPrice: 100.00,\r\n        priceWithoutPromo: undefined,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      const img = canvas.getByRole('img');\r\n      expect(img).toBeInTheDocument();\r\n  \r\n      const category = canvas.getByText('Category');\r\n      expect(category).toBeInTheDocument();\r\n  \r\n      const name = canvas.getByText('Product Name');\r\n      expect(name).toBeInTheDocument();\r\n  \r\n      const price = canvas.getByText('$100.00');\r\n      expect(price).toBeInTheDocument();\r\n    }\r\n}"
                },
                {
                    "name": "WithPromoPrice",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        imageSrc: \"https://via.placeholder.com/312x400\",\r\n        hasTag: true,\r\n        tagColor: \"#1E2832\",\r\n        tagText: \"SALE\",\r\n        productCategory: \"Category\",\r\n        productName: \"Product Name\",\r\n        finalPrice: 80.00,\r\n        priceWithoutPromo: 100.00,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      const finalPrice = canvas.getByText('$80.00');\r\n      expect(finalPrice).toBeInTheDocument();\r\n  \r\n      const priceWithoutPromo = canvas.getByText('$100.00');\r\n      expect(priceWithoutPromo).toBeInTheDocument();\r\n    }\r\n}"
                },
                {
                    "name": "WithTag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        imageSrc: \"https://via.placeholder.com/312x400\",\r\n        hasTag: true,\r\n        tagColor: \"#FF0000\",\r\n        tagText: \"NEW\",\r\n        productCategory: \"Category\",\r\n        productName: \"Product Name\",\r\n        finalPrice: 100.00,\r\n        priceWithoutPromo: undefined,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      const tag = canvas.getByText('NEW');\r\n      expect(tag).toBeInTheDocument();\r\n    }\r\n}"
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        options: exampleOptions,\r\n        label: 'Select an Option',\r\n        errorLabel: false,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      // Click the select to open dropdown\r\n      const selectElement = canvas.getByText('Select an Option');\r\n      await fireEvent.focus(selectElement);\r\n  \r\n      // Check if the options are present\r\n      const option1 = canvas.getByText('Option 1');\r\n      const option2 = canvas.getByText('Option 2');\r\n      const option3 = canvas.getByText('Option 3');\r\n  \r\n      expect(option1).toBeInTheDocument();\r\n      expect(option2).toBeInTheDocument();\r\n      expect(option3).toBeInTheDocument();\r\n    }\r\n}"
                },
                {
                    "name": "exampleOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectModel[]",
                    "defaultValue": "[\r\n    { id: 1, name: 'Option 1' },\r\n    { id: 2, name: 'Option 2' },\r\n    { id: 3, name: 'Option 3' },\r\n]"
                },
                {
                    "name": "WithErrorLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        options: exampleOptions,\r\n        label: 'Select an Option',\r\n        errorLabel: true,\r\n    },\r\n    play: async ({ canvasElement }) => {\r\n      const canvas = within(canvasElement);\r\n  \r\n      // Click the select to open dropdown\r\n      const selectElement = canvas.getByRole('select');\r\n      await fireEvent.focus(selectElement);\r\n  \r\n      // Check if the options are present\r\n      const option1 = canvas.getByText('Option 1');\r\n      const option2 = canvas.getByText('Option 2');\r\n      const option3 = canvas.getByText('Option 3');\r\n  \r\n      expect(option1).toBeInTheDocument();\r\n      expect(option2).toBeInTheDocument();\r\n      expect(option3).toBeInTheDocument();\r\n  \r\n      // Check if error class is present\r\n      expect(selectElement).toHaveClass('error');\r\n    }\r\n}"
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <isep-lib-tabs>\r\n        <isep-lib-tab title=\"Tab 1\">Content for Tab 1</isep-lib-tab>\r\n        <isep-lib-tab title=\"Tab 2\" [isActive]=\"true\">Content for Tab 2</isep-lib-tab>\r\n        <isep-lib-tab title=\"Tab 3\">Content for Tab 3</isep-lib-tab>\r\n      </isep-lib-tabs>\r\n    `,\r\n  }),\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    // Check if all tabs are present\r\n    const tab1 = canvas.getByText('Tab 1' );\r\n    const tab2 = canvas.getByText('Tab 2' );\r\n    const tab3 = canvas.getByText('Tab 3' );\r\n\r\n    expect(tab1).toBeInTheDocument();\r\n    expect(tab2).toBeInTheDocument();\r\n    expect(tab3).toBeInTheDocument();\r\n    \r\n    // Check if the content for the active tab is displayed\r\n    await fireEvent.click(tab2);\r\n    const activeContent = canvas.getByText('Content for Tab 2');\r\n    expect(activeContent).toBeInTheDocument();\r\n  },\r\n}"
                },
                {
                    "name": "WithDisabledTab",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <isep-lib-tabs>\r\n        <isep-lib-tab title=\"Tab 1\">Content for Tab 1</isep-lib-tab>\r\n        <isep-lib-tab title=\"Tab 2\">Content for Tab 2</isep-lib-tab>\r\n        <isep-lib-tab title=\"Tab 3\" [disabled]=\"true\" [isActive]=\"true\">Content for Tab 3</isep-lib-tab>\r\n      </isep-lib-tabs>\r\n    `,\r\n  }),\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    // Check if all tabs are present\r\n    const tab1 = canvas.getByText('Tab 1' );\r\n    const tab2 = canvas.getByText('Tab 2' );\r\n    const tab3 = canvas.getByText('Tab 3' );\r\n\r\n    expect(tab1).toBeInTheDocument();\r\n    expect(tab2).toBeInTheDocument();\r\n    expect(tab3).toBeInTheDocument();\r\n\r\n    // Check if the third tab is disabled\r\n    expect(tab3).toHaveClass('disabled');\r\n\r\n    // Check if the content for the active tab is displayed\r\n    const activeContent = canvas.getByText('Content for Tab 1');\r\n    expect(activeContent).toBeInTheDocument();\r\n  },\r\n}"
                }
            ],
            "projects/ngx-isep-dissertation-components/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-isep-dissertation-components/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    previewTabs: {\r\n      'storybook/docs/panel': {\r\n        hidden: false\r\n      }\r\n    },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts": [
                {
                    "name": "validateIconPresence",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "canvasElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "canvasElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconComponent>",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MultiSelectComponent>",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductTileComponent>",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabsComponent>",
                    "file": "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-isep-dissertation-components/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "validateIconPresence",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ArrowRightIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ChevronLeftIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ChevronRightIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CloseIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FilterIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HeartIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShoppingBagIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithErrorLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exampleCheckedOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exampleOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PreSelectedOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/multi-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithErrorLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPromoPrice",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/product-tile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exampleOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithErrorLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-isep-dissertation-components/src/stories/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisabledTab",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}